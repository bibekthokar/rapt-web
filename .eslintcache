[{"C:\\bibek\\bibek-new\\rapt-web\\src\\components\\bits\\core\\field\\InputField.tsx":"1","C:\\bibek\\bibek-new\\rapt-web\\src\\containers\\App.tsx":"2","C:\\bibek\\bibek-new\\rapt-web\\src\\reportWebVitals.ts":"3","C:\\bibek\\bibek-new\\rapt-web\\src\\components\\page\\dashboard\\project\\tower\\towerSideBar\\TowerSideBar.tsx":"4","C:\\bibek\\bibek-new\\rapt-web\\src\\components\\page\\dashboard\\project\\tower\\towerBody\\TowerBodyIndex.tsx":"5","C:\\bibek\\bibek-new\\rapt-web\\src\\components\\bits\\core\\button\\ToggleBtn.tsx":"6","C:\\bibek\\bibek-new\\rapt-web\\src\\index.tsx":"7","C:\\bibek\\bibek-new\\rapt-web\\src\\theme\\ThemeProvider.tsx":"8","C:\\bibek\\bibek-new\\rapt-web\\src\\theme\\muiTheme.ts":"9","C:\\bibek\\bibek-new\\rapt-web\\src\\theme\\palette\\themePalette.ts":"10","C:\\bibek\\bibek-new\\rapt-web\\src\\containers\\Login\\index.tsx":"11","C:\\bibek\\bibek-new\\rapt-web\\src\\containers\\Dashboard\\index.tsx":"12","C:\\bibek\\bibek-new\\rapt-web\\src\\theme\\palette\\colorPalette.ts":"13","C:\\bibek\\bibek-new\\rapt-web\\src\\containers\\Dashboard\\Tower\\index.tsx":"14","C:\\bibek\\bibek-new\\rapt-web\\src\\containers\\Dashboard\\Project\\index.tsx":"15","C:\\bibek\\bibek-new\\rapt-web\\src\\containers\\Dashboard\\Property\\index.tsx":"16","C:\\bibek\\bibek-new\\rapt-web\\src\\components\\bits\\core\\Spinner\\index.tsx":"17","C:\\bibek\\bibek-new\\rapt-web\\src\\components\\icons\\index.tsx":"18","C:\\bibek\\bibek-new\\rapt-web\\src\\components\\page\\ProjectMap\\index.tsx":"19","C:\\bibek\\bibek-new\\rapt-web\\src\\components\\ComingSoon\\index.tsx":"20","C:\\bibek\\bibek-new\\rapt-web\\src\\components\\includes\\Header\\index.tsx":"21","C:\\bibek\\bibek-new\\rapt-web\\src\\components\\common\\SidePreview\\index.tsx":"22","C:\\bibek\\bibek-new\\rapt-web\\src\\components\\page\\Measurement\\SensorBasicDetail\\index.tsx":"23","C:\\bibek\\bibek-new\\rapt-web\\src\\components\\page\\Measurement\\SensorConfiguration\\index.tsx":"24","C:\\bibek\\bibek-new\\rapt-web\\src\\components\\includes\\Layout.tsx":"25","C:\\bibek\\bibek-new\\rapt-web\\src\\components\\includes\\Sidebar\\index.tsx":"26","C:\\bibek\\bibek-new\\rapt-web\\src\\components\\page\\MeasurementBody\\index.tsx":"27","C:\\bibek\\bibek-new\\rapt-web\\src\\components\\page\\Measurement\\SensorDetail\\index.tsx":"28","C:\\bibek\\bibek-new\\rapt-web\\src\\components\\page\\Measurement\\Calibration\\index.tsx":"29","C:\\bibek\\bibek-new\\rapt-web\\src\\components\\bits\\Breadcrumb\\index.tsx":"30","C:\\bibek\\bibek-new\\rapt-web\\src\\components\\page\\Measurement\\MountingArrangement\\index.tsx":"31","C:\\bibek\\bibek-new\\rapt-web\\src\\components\\includes\\Sidebar\\TowerSidebar.tsx":"32","C:\\bibek\\bibek-new\\rapt-web\\src\\components\\common\\SensorCard\\index.tsx":"33","C:\\bibek\\bibek-new\\rapt-web\\src\\components\\bits\\core\\ToggleButton\\index.tsx":"34"},{"size":3536,"mtime":1613459199953,"results":"35","hashOfConfig":"36"},{"size":718,"mtime":1613459802389,"results":"37","hashOfConfig":"36"},{"size":440,"mtime":1611932921394,"results":"38","hashOfConfig":"36"},{"size":3668,"mtime":1612361550081,"results":"39","hashOfConfig":"36"},{"size":1706,"mtime":1612364289385,"results":"40","hashOfConfig":"36"},{"size":1576,"mtime":1612364231822,"results":"41","hashOfConfig":"36"},{"size":1675,"mtime":1613372705797,"results":"42","hashOfConfig":"36"},{"size":451,"mtime":1613372705798,"results":"43","hashOfConfig":"36"},{"size":911,"mtime":1613478748816,"results":"44","hashOfConfig":"36"},{"size":269,"mtime":1611932921404,"results":"45","hashOfConfig":"36"},{"size":6048,"mtime":1613459796393,"results":"46","hashOfConfig":"36"},{"size":614,"mtime":1613372705794,"results":"47","hashOfConfig":"36"},{"size":531,"mtime":1613372705803,"results":"48","hashOfConfig":"36"},{"size":309,"mtime":1613372705793,"results":"49","hashOfConfig":"36"},{"size":279,"mtime":1613372705791,"results":"50","hashOfConfig":"36"},{"size":563,"mtime":1613372705792,"results":"51","hashOfConfig":"36"},{"size":365,"mtime":1613372705596,"results":"52","hashOfConfig":"36"},{"size":3380,"mtime":1613460242700,"results":"53","hashOfConfig":"36"},{"size":604,"mtime":1613372705788,"results":"54","hashOfConfig":"36"},{"size":434,"mtime":1613372705550,"results":"55","hashOfConfig":"36"},{"size":2538,"mtime":1613460412305,"results":"56","hashOfConfig":"36"},{"size":1532,"mtime":1613474093533,"results":"57","hashOfConfig":"36"},{"size":5523,"mtime":1613478294642,"results":"58","hashOfConfig":"36"},{"size":7041,"mtime":1613473671713,"results":"59","hashOfConfig":"36"},{"size":1965,"mtime":1613372705713,"results":"60","hashOfConfig":"36"},{"size":3365,"mtime":1613474099125,"results":"61","hashOfConfig":"36"},{"size":16282,"mtime":1613478933872,"results":"62","hashOfConfig":"36"},{"size":11201,"mtime":1613475916567,"results":"63","hashOfConfig":"36"},{"size":6791,"mtime":1613473561054,"results":"64","hashOfConfig":"36"},{"size":1205,"mtime":1613372705559,"results":"65","hashOfConfig":"36"},{"size":6861,"mtime":1613473570122,"results":"66","hashOfConfig":"36"},{"size":10235,"mtime":1613471381801,"results":"67","hashOfConfig":"36"},{"size":5216,"mtime":1613478451879,"results":"68","hashOfConfig":"36"},{"size":1509,"mtime":1613372705599,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"oeouxv",{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\bibek\\bibek-new\\rapt-web\\src\\components\\bits\\core\\field\\InputField.tsx",[],"C:\\bibek\\bibek-new\\rapt-web\\src\\containers\\App.tsx",[],"C:\\bibek\\bibek-new\\rapt-web\\src\\reportWebVitals.ts",[],["141","142"],"C:\\bibek\\bibek-new\\rapt-web\\src\\components\\page\\dashboard\\project\\tower\\towerSideBar\\TowerSideBar.tsx",["143"],"C:\\bibek\\bibek-new\\rapt-web\\src\\components\\page\\dashboard\\project\\tower\\towerBody\\TowerBodyIndex.tsx",["144","145"],"C:\\bibek\\bibek-new\\rapt-web\\src\\components\\bits\\core\\button\\ToggleBtn.tsx",["146"],"C:\\bibek\\bibek-new\\rapt-web\\src\\index.tsx",[],["147","148"],"C:\\bibek\\bibek-new\\rapt-web\\src\\theme\\ThemeProvider.tsx",[],"C:\\bibek\\bibek-new\\rapt-web\\src\\theme\\muiTheme.ts",[],"C:\\bibek\\bibek-new\\rapt-web\\src\\theme\\palette\\themePalette.ts",[],"C:\\bibek\\bibek-new\\rapt-web\\src\\containers\\Login\\index.tsx",[],"C:\\bibek\\bibek-new\\rapt-web\\src\\containers\\Dashboard\\index.tsx",[],"C:\\bibek\\bibek-new\\rapt-web\\src\\theme\\palette\\colorPalette.ts",[],"C:\\bibek\\bibek-new\\rapt-web\\src\\containers\\Dashboard\\Tower\\index.tsx",[],"C:\\bibek\\bibek-new\\rapt-web\\src\\containers\\Dashboard\\Project\\index.tsx",[],"C:\\bibek\\bibek-new\\rapt-web\\src\\containers\\Dashboard\\Property\\index.tsx",[],"C:\\bibek\\bibek-new\\rapt-web\\src\\components\\bits\\core\\Spinner\\index.tsx",[],"C:\\bibek\\bibek-new\\rapt-web\\src\\components\\icons\\index.tsx",[],"C:\\bibek\\bibek-new\\rapt-web\\src\\components\\page\\ProjectMap\\index.tsx",[],"C:\\bibek\\bibek-new\\rapt-web\\src\\components\\ComingSoon\\index.tsx",[],"C:\\bibek\\bibek-new\\rapt-web\\src\\components\\includes\\Header\\index.tsx",[],"C:\\bibek\\bibek-new\\rapt-web\\src\\components\\common\\SidePreview\\index.tsx",[],"C:\\bibek\\bibek-new\\rapt-web\\src\\components\\page\\Measurement\\SensorBasicDetail\\index.tsx",[],"C:\\bibek\\bibek-new\\rapt-web\\src\\components\\page\\Measurement\\SensorConfiguration\\index.tsx",[],"C:\\bibek\\bibek-new\\rapt-web\\src\\components\\includes\\Layout.tsx",[],"C:\\bibek\\bibek-new\\rapt-web\\src\\components\\includes\\Sidebar\\index.tsx",[],"C:\\bibek\\bibek-new\\rapt-web\\src\\components\\page\\MeasurementBody\\index.tsx",["149"],"import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n// import AddIcon from '@material-ui/icons/Add';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Grid } from '@material-ui/core';\r\n// import SwapHorizOutlinedIcon from '@material-ui/icons/SwapHorizOutlined';\r\n// import { Link } from 'react-router-dom';\r\n// import CloseIcon from '@material-ui/icons/Close';\r\n// import DeleteIcon from '@material-ui/icons/Delete';\r\nimport ToggleButton from 'src/components/bits/core/ToggleButton';\r\nimport { gql, useQuery } from '@apollo/client';\r\nimport Breadcrumb from 'src/components/bits/Breadcrumb';\r\nimport SensorCard from 'src/components/common/SensorCard';\r\nimport SidePreview from 'src/components/common/SidePreview';\r\nimport SensorDetail from '../Measurement/SensorDetail';\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  googleMap: {\r\n    width: '100%',\r\n    '& iframe': {\r\n      width: '100%',\r\n      height: '100%',\r\n      border: 'none',\r\n    },\r\n  },\r\n  towerBody: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    position: 'relative',\r\n  },\r\n  towerHead: {\r\n    backgroundColor: 'var(--white)',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between',\r\n    padding: '0 1.5rem',\r\n    height: '4.2rem',\r\n    fontFamily: 'Roboto',\r\n  },\r\n  arrowIcon: {\r\n    width: '8px',\r\n    height: '8px',\r\n  },\r\n  towerBodyLeft: {\r\n    width: 'calc(100% - 25rem)',\r\n  },\r\n  towerBodyRight: {\r\n    position: 'relative',\r\n    width: '25rem',\r\n    background: '#fff',\r\n    transition: 'all .3s ease-in',\r\n    '&.active': {\r\n      width: '720px',\r\n      position: 'absolute',\r\n      right: '0',\r\n      height: '100%',\r\n      boxShadow: ' 0 2px 12px 7px rgba(0, 0, 0, 0.04)',\r\n      transition: 'all .3s ease-in',\r\n    },\r\n    '& .control-form': {\r\n      padding: '4px 8px',\r\n      border: 'none',\r\n      marginTop: '4px',\r\n      fontSize: '12px',\r\n      width: '210px',\r\n      textAlign: 'center',\r\n      overflow: 'hidden',\r\n      outline: 'none',\r\n      lineHeight: '1.33',\r\n      background: 'rgba(30 , 36 , 71 , 0.06)',\r\n      borderRadius: '2px',\r\n      '&::before,&::after': {\r\n        display: 'none',\r\n      },\r\n    },\r\n  },\r\n  towerDetails: {\r\n    // background: 'rgba(30, 36, 71, 0.03)',\r\n    // boxShadow: '2px 9px 47px 20px rgba(0, 0, 0, 0.02)',\r\n    // opacity: '0.03',\r\n    // padding: '3rem 3.5rem 7rem 3.5rem',\r\n    // boxShadow: '2px 9px 47px 20px rgba(0, 0, 0, 0.02)',\r\n    // backgroundColor: 'rgba(30,36,71,.03)',\r\n    maxWidth: '87rem',\r\n    marginTop: '3rem',\r\n    marginLeft: '3.5rem',\r\n    marginRight: '3.5rem',\r\n    [theme.breakpoints.down('md')]: {\r\n      maxWidth: '80rem',\r\n\r\n    },\r\n    [theme.breakpoints.up('xl')]: {\r\n      maxWidth: '100%',\r\n\r\n    },\r\n  },\r\n  towerStatus: {\r\n    display: 'flex',\r\n    marginBottom: '40px',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'flex-end',\r\n  },\r\n  towerStatusName: {\r\n    '& p': {\r\n      fontFamily: 'Roboto',\r\n      color: theme.palette.primary.main,\r\n      fontSize: '11px',\r\n      letterSpacing: '0.3px',\r\n      opacity: '.3',\r\n    },\r\n    '& h3': {\r\n      fontFamily: 'Roboto',\r\n      marginTop: '3px',\r\n      fontSize: '2rem',\r\n      letterSpacing: '0.2px',\r\n      fontWeight: 500,\r\n      lineHeight: '1',\r\n      objectFit: 'contain',\r\n      color: theme.palette.primary.main,\r\n    },\r\n  },\r\n  towerStatusBtn: {\r\n    '& button': {\r\n      width: '13.3rem',\r\n      '& MuiButton-startIcon': {\r\n        fontSize: '1.3rem',\r\n      },\r\n    },\r\n  },\r\n  towerDetailsCard: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    flexDirection: ({ show }: any) => (show ? 'column' : 'row'),\r\n    [theme.breakpoints.down('md')]: {\r\n      flexDirection: 'column!important' as any,\r\n    },\r\n    '& .items-wrap': {\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      [theme.breakpoints.down('md')]: {\r\n        width: '100%'\r\n      },\r\n      [theme.breakpoints.up('xl')]: {\r\n        flexDirection: 'row',\r\n        flexWrap: 'wrap',\r\n        justifyContent: 'space-between',\r\n        width: 'calc(50% - 20px)'\r\n      }\r\n    },\r\n  },\r\n  towerDetailsItem: {\r\n    background: '#fff',\r\n    borderRadius: '6px',\r\n    color: theme.palette.primary.main,\r\n    transition: 'all .3 ease-in',\r\n    '&:not(:first-child)': {\r\n      marginTop: '2.5rem',\r\n    },\r\n    '&:hover': {\r\n      '& h3': {\r\n        opacity: '1',\r\n      },\r\n    },\r\n    '& h3': {\r\n      fontSize: '14px',\r\n      padding: '14px 15px',\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      opacity: '0.8',\r\n      '& .icon': {\r\n        marginRight: '10px',\r\n      },\r\n    },\r\n    '& ul': {\r\n      '& li': {\r\n        fontSize: '12px',\r\n        borderTop: '1px solid rgba(0, 0, 0, 0.02)',\r\n        padding: '14px 0',\r\n        paddingLeft: '3rem',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        cursor: 'pointer',\r\n        trnasition: 'all .3s ease-in',\r\n        '&:hover': {\r\n          color: '#fff',\r\n          transform: ' scale(1.05)',\r\n          borderRadius: '4px',\r\n          background: theme.palette.secondary.main,\r\n          '& .icon-add,& strong, & p': {\r\n            color: '#fff',\r\n            opacity: '1',\r\n          },\r\n        },\r\n        '& strong': {\r\n          fontSize: '13px',\r\n          color: '#1e2447',\r\n          opacity: '0.8',\r\n          letterSpacing: '1.08',\r\n          marginRight: '8px',\r\n        },\r\n        '& p': {\r\n          color: '#1e2447',\r\n          opacity: '0.5',\r\n        },\r\n        '& .icon-add': {\r\n          color: '#00c48c',\r\n        },\r\n      },\r\n    },\r\n  },\r\n  towerRightHead: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between',\r\n    padding: '29px 15px 23px 15px',\r\n    color: theme.palette.primary.main,\r\n    '& h2': {\r\n      fontSize: '2rem',\r\n      letterSpacing: '0.2px',\r\n      fontWeight: 'bold',\r\n    },\r\n    '& p': {\r\n      fontSize: '13px',\r\n      letterSpacing: '0.1px',\r\n      opacity: '0.6',\r\n    },\r\n  },\r\n\r\n  towerRighTitle: {},\r\n  logoIcon: {\r\n    boxShadow: '0 0 26px 6px rgba(0, 0, 0, 0.05)',\r\n    background: '#fff',\r\n    width: '44px',\r\n    height: ' 44px',\r\n    borderRadius: '50%',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    '& .icon': {\r\n      fill: '#303030',\r\n    },\r\n  },\r\n  towerBodyBasic: {\r\n    padding: '20px 15px 30px 15px',\r\n    borderTop: '1px solid rgb(30 , 36 , 71 , .1)',\r\n    '&.active': {\r\n      paddingRight: '210px',\r\n    },\r\n    '& h3': {\r\n      color: theme.palette.primary.main,\r\n      fontSize: '15px',\r\n      letterSpacing: '1.07px',\r\n    },\r\n  },\r\n  towerBodyBasicForm: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'space-between',\r\n  },\r\n  formField: {\r\n    marginTop: '16px',\r\n    '& p': {\r\n      fontSize: '13px',\r\n      color: '#000',\r\n      opacity: '0.5',\r\n      lineHeight: '1.23',\r\n    },\r\n\r\n    '& .date': {\r\n      width: '100px',\r\n      '&:last-child': {\r\n        marginLeft: '10px',\r\n      },\r\n      '& input': {\r\n        width: '100%',\r\n      },\r\n    },\r\n  },\r\n  formFieldDate: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n  },\r\n  towerBodyClose: {\r\n    position: 'absolute',\r\n    top: '23px',\r\n    left: '-34px',\r\n    padding: '6px',\r\n    cursor: 'pointer',\r\n    background: '#fff',\r\n    borderRadius: '4px',\r\n    zIndex: theme.spacing(2),\r\n    boxShadow: ' 0 2px 12px -2px rgba(0, 0, 0, 0.04)',\r\n  },\r\n  towerBodySensor: {\r\n    padding: '20px 15px 30px 15px',\r\n    borderTop: '1px solid rgb(30 , 36 , 71 , .1)',\r\n    '& h3': {\r\n      fontSize: '15px',\r\n      letterSpacing: '1.07px',\r\n      color: theme.palette.primary.main,\r\n    },\r\n    '& p': {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      fontSize: '12px',\r\n      lineHeight: '1.08',\r\n      cursor: 'pointer',\r\n      color: theme.palette.primary.main,\r\n      '&.delete': {\r\n        '& svg': {\r\n          fill: theme.palette.primary.main,\r\n        },\r\n      },\r\n      '& svg': {\r\n        fill: theme.palette.secondary.main,\r\n      },\r\n    },\r\n  },\r\n  towerBodySensorHead: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between',\r\n  },\r\n  towerBodySensorTable: {\r\n    marginTop: '2rem',\r\n    '& table ': {\r\n      borderCollapse: 'collapse',\r\n      width: '100%',\r\n\r\n      '& th': {\r\n        padding: '10px 5px',\r\n        textAlign: 'left',\r\n        fontSize: '12px',\r\n        marginBottom: '10px',\r\n        color: 'rgba(0 , 0 , 0 , .3)',\r\n        borderBottom: ' solid 1px rgb(30 , 36 , 71 , .1)',\r\n      },\r\n      '& td': {\r\n        padding: '5px',\r\n        '& .control-form': {\r\n          width: '100%',\r\n          '&.date': {\r\n            width: '112px',\r\n          },\r\n        },\r\n      },\r\n    },\r\n    '& .calibration': {\r\n      '& td': {\r\n        '& .control-form': {\r\n          height: '34px',\r\n          lineHeight: '34px',\r\n        },\r\n      },\r\n    },\r\n  },\r\n  towerBodySensorForm: {\r\n    marginTop: '8px',\r\n    '& .control-form_border': {\r\n      marginTop: '10px',\r\n      width: '220px',\r\n      fontSize: '13px',\r\n      padding: '9px 8px',\r\n      borderRadius: '2px',\r\n      color: 'rgba(0 , 0 , 0 , .7)',\r\n      border: 'solid 1px rgba(30 , 36 , 71 , .15)',\r\n    },\r\n  },\r\n  pdf: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    cursor: 'pointer',\r\n    padding: '3px 4px',\r\n    width: '150px',\r\n    fontSize: '11px',\r\n    borderRadius: '2px',\r\n    marginTop: '4px',\r\n    color: 'rgba(0 , 0 , 0 , .8)',\r\n    border: ' solid 1px rgba(30, 36, 71, 0.15)',\r\n    '& img': {\r\n      width: '27px',\r\n      marginRight: '5px',\r\n    },\r\n    '& input': {\r\n      display: 'none',\r\n    },\r\n  },\r\n}));\r\n\r\nconst TOWERQUERY = gql`\r\n  query {\r\n    measurement_point @client\r\n  }\r\n`;\r\n\r\nconst MeasurementBody = () => {\r\n  const [show, setShow] = useState(false);\r\n  const classes = useStyles({ show });\r\n  const [activeSensor, setActiveSensor] = useState<number | null>(null);\r\n  const [activeMeasurementPoint, setActiveMeasurementPoint] = useState<\r\n    number | null\r\n  >(null);\r\n\r\n  const { data } = useQuery(TOWERQUERY);\r\n\r\n  const capUnderSentence = (text: string) => {\r\n    let wordsArray = text.toLowerCase().split('_');\r\n    let capsArray: string[] = [];\r\n    wordsArray.forEach((word: string) => {\r\n      capsArray.push(word[0].toUpperCase() + word.slice(1));\r\n    });\r\n\r\n    return capsArray.join(' ');\r\n  };\r\n\r\n  console.log(show, 'show is here from there');\r\n\r\n  return (\r\n    <div className={classes.towerBody}>\r\n      <div className={classes.towerBodyLeft}>\r\n        <div className={classes.towerHead}>\r\n          <Breadcrumb\r\n            breadcrumbList={[\r\n              { name: 'Project name 2' },\r\n              { name: 'Tower name 1' },\r\n              { name: 'Measurements' },\r\n            ]}\r\n          />\r\n          <ToggleButton inactive=\"List View\" active=\"Timeline\" />\r\n        </div>\r\n        <div className={classes.towerDetails}>\r\n          <div className={classes.towerStatus}>\r\n            <div className={classes.towerStatusName}>\r\n              <p>1 Active</p>\r\n              <h3>Measurement Points</h3>\r\n            </div>\r\n            <div className={classes.towerStatusBtn}>\r\n              <Button\r\n                color=\"secondary\"\r\n                variant=\"contained\"\r\n                size=\"medium\"\r\n                startIcon={'+'}\r\n                disableElevation\r\n              >\r\n                Measurement\r\n              </Button>\r\n            </div>\r\n          </div>\r\n          <div className={classes.towerDetailsCard}>\r\n            <div className=\"items-wrap\">\r\n              {data?.measurement_point\r\n                ?.slice(0, 7)\r\n                ?.map((item: any, index: number) => {\r\n                  const splitDetail = item?.name?.split('_');\r\n                  const mDetail = splitDetail?.[1]?.split('m');\r\n                  const mValue = mDetail?.[0];\r\n                  const mDirection = mDetail?.[1];\r\n\r\n                  //mount\r\n                  const mountList = item?.mounting_arrangement;\r\n                  const sensorList = item?.sensor;\r\n\r\n                  const newMountList =\r\n                    mountList?.map((i: any) => ({\r\n                      ...i,\r\n                      name: `${i?.boom_oem} ${i?.boom_model}`,\r\n                    })) || [];\r\n                  const newSensorList =\r\n                    sensorList?.map((i: any) => ({\r\n                      ...i,\r\n                      name: `${i?.oem}`,\r\n                    })) || [];\r\n\r\n                  const sensorTitle = `${capUnderSentence(\r\n                    item?.measurement_type_id\r\n                  )} @ ${mValue} m ${mDirection ? `- ${mDirection}` : ''}`;\r\n                  return (\r\n                    <SensorCard\r\n                      title={sensorTitle}\r\n                      sensorList={[...newMountList, ...newSensorList]}\r\n                      key={sensorTitle}\r\n                      activeMeasurementPoint={\r\n                        activeMeasurementPoint === index + 1 ? true : false\r\n                      }\r\n                      activeSensor={activeSensor}\r\n                      onClick={(sensorIndex: number) => {\r\n                        if (\r\n                          sensorIndex === activeSensor &&\r\n                          activeMeasurementPoint === index + 1\r\n                        ) {\r\n                          setActiveMeasurementPoint(null);\r\n                          setActiveSensor(null);\r\n                        } else {\r\n                          setActiveMeasurementPoint(index + 1);\r\n                          setActiveSensor(sensorIndex);\r\n                        }\r\n                      }}\r\n                    />\r\n                  );\r\n                })}\r\n            </div>\r\n            <div className=\"items-wrap\">\r\n              {data?.measurement_point\r\n                ?.slice(7, 14)\r\n                ?.map((item: any, index: number) => {\r\n                  const splitDetail = item?.name?.split('_');\r\n                  const mDetail = splitDetail?.[1]?.split('m');\r\n                  const mValue = mDetail?.[0];\r\n                  const mDirection = mDetail?.[1];\r\n\r\n                  //mount\r\n                  const mountList = item?.mounting_arrangement;\r\n                  const sensorList = item?.sensor;\r\n\r\n                  const newMountList =\r\n                    mountList?.map((i: any) => ({\r\n                      ...i,\r\n                      name: `${i?.boom_oem} ${i?.boom_model}`,\r\n                    })) || [];\r\n                  const newSensorList =\r\n                    sensorList?.map((i: any) => ({\r\n                      ...i,\r\n                      name: `${i?.oem}`,\r\n                    })) || [];\r\n                  const sensorTitle = `${capUnderSentence(\r\n                    item?.measurement_type_id\r\n                  )} @ ${mValue} m ${mDirection ? `- ${mDirection}` : ''}`;\r\n\r\n                  return (\r\n                    <SensorCard\r\n                      title={sensorTitle}\r\n                      sensorList={[...newMountList, ...newSensorList]}\r\n                      key={sensorTitle}\r\n                      activeMeasurementPoint={\r\n                        activeMeasurementPoint === index + 8 ? true : false\r\n                      }\r\n                      activeSensor={activeSensor}\r\n                      onClick={(sensorIndex: number) => {\r\n                        if (\r\n                          sensorIndex === activeSensor &&\r\n                          activeMeasurementPoint === index + 8\r\n                        ) {\r\n                          setActiveMeasurementPoint(null);\r\n                          setActiveSensor(null);\r\n                        } else {\r\n                          setActiveMeasurementPoint(index + 8);\r\n                          setActiveSensor(sensorIndex);\r\n                        }\r\n                      }}\r\n                    />\r\n                  );\r\n                })}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <SidePreview active={show} onClick={() => setShow(true)} expand>\r\n        <SensorDetail\r\n          data={{}}\r\n          show={show}\r\n          handleClose={(e: any) => {\r\n            e.stopPropagation();\r\n            setShow(false);\r\n          }}\r\n        />\r\n      </SidePreview>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MeasurementBody;\r\n","C:\\bibek\\bibek-new\\rapt-web\\src\\components\\page\\Measurement\\SensorDetail\\index.tsx",[],"C:\\bibek\\bibek-new\\rapt-web\\src\\components\\page\\Measurement\\Calibration\\index.tsx",[],"C:\\bibek\\bibek-new\\rapt-web\\src\\components\\bits\\Breadcrumb\\index.tsx",[],"C:\\bibek\\bibek-new\\rapt-web\\src\\components\\page\\Measurement\\MountingArrangement\\index.tsx",[],"C:\\bibek\\bibek-new\\rapt-web\\src\\components\\includes\\Sidebar\\TowerSidebar.tsx",[],"C:\\bibek\\bibek-new\\rapt-web\\src\\components\\common\\SensorCard\\index.tsx",[],"C:\\bibek\\bibek-new\\rapt-web\\src\\components\\bits\\core\\ToggleButton\\index.tsx",[],{"ruleId":"150","replacedBy":"151"},{"ruleId":"152","replacedBy":"153"},{"ruleId":"154","severity":1,"message":"155","line":1,"column":17,"nodeType":"156","messageId":"157","endLine":1,"endColumn":25},{"ruleId":"154","severity":1,"message":"155","line":1,"column":17,"nodeType":"156","messageId":"157","endLine":1,"endColumn":25},{"ruleId":"158","severity":1,"message":"159","line":48,"column":17,"nodeType":"160","endLine":48,"endColumn":341},{"ruleId":"154","severity":1,"message":"161","line":33,"column":11,"nodeType":"156","messageId":"157","endLine":33,"endColumn":21},{"ruleId":"150","replacedBy":"162"},{"ruleId":"152","replacedBy":"163"},{"ruleId":"154","severity":1,"message":"164","line":5,"column":10,"nodeType":"156","messageId":"157","endLine":5,"endColumn":14},"no-native-reassign",["165"],"no-negated-in-lhs",["166"],"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement","'InputProps' is defined but never used.",["165"],["166"],"'Grid' is defined but never used.","no-global-assign","no-unsafe-negation"]